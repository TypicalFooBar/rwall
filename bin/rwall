#!/bin/bash

# Get the rwall root directory
rwall_root_directory="$( dirname $( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd ))"

# Navigate to the rwall root directory
cd $rwall_root_directory

# Toggles the rwall cron job in crontab
if [[ $1 == "cron-toggle" ]];
then
    # Check if rwall is already installed in crontab
    crontabGrepRwall="$(crontab -l | grep 'rwall')"
    
    # If the string is empty, then rwall is not in crontab
    if [[ $crontabGrepRwall == "" ]];
    then
        # Get the cron frequency value
        cronFrequency="$(grep cron-frequency= etc/rwall.ini | cut -f2- -d '=')"
        
        # The line to be inserted into the crontab
        cronEntry="$cronFrequency DISPLAY=:0.0 $rwall_root_directory/bin/rwall"
    
        # Add the cron entry
        (crontab -l; echo "$cronEntry") | crontab -
        
        # Create the lock file
        touch $rwall_root_directory/etc/USING-CRON.lock
    else
        # Remove the cron entry
        crontab -l | sed "\|$rwall_root_directory/bin/rwall$|d" | crontab -
        rm $rwall_root_directory/etc/USING-CRON.lock
    fi
    
    # Exit the script
    exit
fi

# Updates the settings file
if [[ $1 == "settings" ]];
then
    # Store the variables for readability
    queryString=$2 # The word(s) to use for the query
    resolution=$3 # The resolution
    cronFrequency=$4 # The format of this parameter will be like the beginning of a cron job (ex: "0,30 * * * *")
    
    # The ini file
    iniFile=$rwall_root_directory/etc/rwall.ini
    
    # Delete the current settings file
    rm $iniFile
    
    # Create the new settings file
    echo -e "[query]\nq=$queryString\nres=$resolution\n[cron]\ncron-frequency=$cronFrequency" >> $iniFile
    
    # If the USING-CRON.lock file exists, then we should toggle off, then toggle on
    # in case there were any settings changed to the cron frequency
    if [[ -e $rwall_root_directory/etc/USING-CRON.lock ]];
    then
        $($rwall_root_directory/bin/rwall cron-toggle)
        $($rwall_root_directory/bin/rwall cron-toggle)
    fi
    
    # Exit the script
    exit
fi

# Create the tmp directory if it doesn't already exist
mkdir -p tmp

# Remove all files in the rwall/tmp directory
rm -r tmp/*

# Read the ini file for parameters
q=$(grep q= etc/rwall.ini | cut -f2- -d '=')
res=$(grep res= etc/rwall.ini | cut -f2- -d '=')

# Download the html based on our search parameters
wget "http://alpha.wallhaven.cc/search?q=$q&categories=111&purity=100&resolutions=$res&sorting=random&order=asc" -O tmp/wallhaven.html

# grep the image ID
#id=$(grep -o -m 1 '<a href="javascript:;" data-id=".*" ' tmp/wallhaven.html | grep -o [0-9].*[0-9])
id=$(grep -oP 'wallpaper-id="\K[^"]*' tmp/wallhaven.html | head -1)

# Some variables to help us know if we found the image and what file type it is
image_found=1
file_type=""

# JPG
if [ $image_found -eq 1 ];
then
	wget_image=$(wget http://alpha.wallhaven.cc/wallpapers/full/wallhaven-$id.jpg -O tmp/wallpaper-$id.jpg)
	if [ $? -eq 0 ]
	then
		image_found=0
		file_type="jpg"
	fi
fi

# PNG
if [ $image_found -eq 1 ];
then
	wget_image=$(wget http://alpha.wallhaven.cc/wallpapers/full/wallhaven-$id.png -O tmp/wallpaper-$id.png)
	if [ $? -eq 0 ]
	then
		image_found=0
		file_type="png"
	fi
fi

# Change the wallpaper
gsettings set org.gnome.desktop.background picture-uri "file://$rwall_root_directory/tmp/wallpaper-$id.$file_type"
